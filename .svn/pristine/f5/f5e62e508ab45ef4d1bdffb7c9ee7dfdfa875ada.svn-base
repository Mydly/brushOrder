/**
 * Created by Administrator on 2017/5/17.
 */
import React from 'react'
import { connect } from 'react-redux';
import { Navbar, Nav, MenuItem, NavItem, NavDropdown, } from 'react-bootstrap'

import '../../static/style/common.scss'
import Finan from './Finan';
import { changeTab, tabChangeAction } from '../../actions/topNav';
import CONSTS, { PageKey } from  '../../config/consts'
import COMMON from  '../../function/common'


class BootNavBar extends React.Component {

    constructor(props) {
        super(props);
        this.handleClick = this.handleClick.bind(this);
        console.log(props);

    }

    handleClick (key) {

        if(key == CONSTS.pageKey.login){

        }
        else{
            this.props.change(key);
        }

    }


    render() {
        //const { dispatch, visibleTodos, visibilityFilter } = this.props;
        //console.log(visibleTodos);

        let menuArr = [
            {title:"首页",key:PageKey.index.key},
            {title:"交易中心",key:PageKey.trade.key},
            {title:"安全中心",key:PageKey.safe.key,child:[
                {title:"账户预览",key:PageKey.safeAccount.key},
                {title:"登录密码",key:PageKey.safePsd.key},
                {title:"收货地址",key:PageKey.safeAddress.key}
            ]},
            {title:"财务中心",key:PageKey.finan.key,child:[
                {title:"我的财产",key:PageKey.finanInfo.key},
                {title:"账户充值",key:PageKey.finanCharge.key},
                {title:"账户提现",key:PageKey.finanMoney.key},
                {title:"虚拟币转入",key:PageKey.finanIn.key},
                {title:"虚拟币转出",key:PageKey.finanOut.key}
            ]},
            {title:"认购中心",key:PageKey.issue.key},
            {title:"理财中心",key:PageKey.money.key},
            {title:"新币投票",key:PageKey.vote.key}
        ];



        let menuList = menuArr.map(
            (item) => {
                if(item.child == undefined){
                    return <NavItem eventKey={item.key}>{item.title}</NavItem>;
                }
                else {
                    return (<NavDropdown eventKey={item.key} title={item.title} id="{item.key}">
                        {item.child.map(
                            (item2) =>
                                ( <MenuItem eventKey={item2.key}>{item2.title}</MenuItem>)
                        )}
                    </NavDropdown>);
                }
            }

        );

        let loginNav = null;
        if(this.props.isLogin){
            loginNav = <Nav pullRight>
                <NavItem eventKey={1}>mydly</NavItem>
                <NavItem eventKey={2}>退出</NavItem>
            </Nav>
        }else{
            loginNav = <Nav pullRight>
                <NavItem eventKey={CONSTS.pageKey.login}>登录</NavItem>
            </Nav>
        }

        return (
            <Navbar collapseOnSelect onToggle={this.handleClickTest} onSelect={this.handleClick}>
                <Navbar.Collapse>
                    <Nav>
                        {menuList}
                    </Nav>
                    {loginNav}
                </Navbar.Collapse>
            </Navbar>
        );
    }
}

const mapDispatchToProps = (dispatch) => {
    return {
        change:(tab) => {
            dispatch(tabChangeAction(tab))
        }}
}

const mapStateToProps = (state) => {

    let isLogin = COMMON.mem(CONSTS.cacheName.userid) ? true : false;

    return {
        tabBar: state.topNav.tabBar,
        lastBar:state.topNav.lastBar,
        alert:state.alert,
        userinfo:state.topNav.userinfo,
        isLogin:isLogin
    }
}

export default connect(mapStateToProps,mapDispatchToProps)(BootNavBar);